# This is a basic workflow to help you get started with Actions

name: build and publish gh-pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: setup node version
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
      - name: install hexo-cli
        run: npm install -g hexo-cli
      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: generate public tatic files
        run: |
          hexo clean
          hexo g

      - name: copy robots.txt to public directory
        run: cp robots.txt ./public


      - name: push public to gh-pages branch
        env:
          REMOTE_REPO: https://${{ secrets.GIT_TOKEN }}@github.com/${{ secrets.GIT_REPOSITORY }}.git
          REMOTE_BRANCH: gh-pages
        run: |
          cd ./public && git init && git add .
          git config user.name "${{ secrets.GIT_USERNAME }}"
          git config user.email "${{ secrets.GIT_USEREMAIL }}"
          echo -n 'Files to Commit:' && ls -l | wc -l
          git commit -m "github actions build at $(TZ=ANY-8 date +'%Y-%m-%d %H:%M:%S')" > /dev/null 2>&1
          git push --force $REMOTE_REPO master:$REMOTE_BRANCH > /dev/null 2>&1

      - name: deploy
        run: |
          echo build successfully, now you can redeploy your website

      
          
